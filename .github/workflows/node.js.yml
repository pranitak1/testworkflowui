# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['>=20.x']

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: taskwise/package-lock.json

    - name: Verify lock file presence
      run: |
        if [ ! -f ./taskwise/package-lock.json ] && [ ! -f ./taskwise/npm-shrinkwrap.json ] && [ ! -f ./taskwise/yarn.lock ]; then
          echo "No lock file found in taskwise directory. Please commit package-lock.json, npm-shrinkwrap.json, or yarn.lock."
          exit 1
        fi

    - name: Install specific npm version
      run: npm install -g npm@10.2.3

    - name: Install dependencies
      run: |
        cd taskwise
        npm ci

    - name: Install missing Babel plugin
      run: |
        cd taskwise
        npm install --save-dev @babel/plugin-proposal-private-property-in-object

    - name: Install react-scripts
      run: |
        cd taskwise
        npm install react-scripts

    - name: Build the app
      run: |
        cd taskwise
        npm run build --if-present

    - name: List directory contents
      run: |
        cd taskwise
        ls -la

    - name: Run tests
      run: |
        cd taskwise
        npm test -- --detectOpenHandles

  deploy_to_netlify:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Add condition for main branch push

    steps:
    - uses: actions/checkout@v4

    - name: Deploy to Netlify
      run: |
        ls -la /
        ls -la ./taskwise
        cd taskwise
        echo "Deploying to Netlify..."
        ls -la   # List all files and directories in the current directory
        ls -la build   # List files and directories in the build directory

    - name: Deploy to Netlify
      uses: South-Paw/action-netlify-deploy@v1.2.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
        build-dir: './taskwise/build'
        comment-on-commit: true



